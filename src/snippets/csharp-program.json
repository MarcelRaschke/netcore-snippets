{
	"Create Program.cs": {
		"prefix": "anc3-program-cs",
		"body": [
			"using System;",
			"using System.Collections.Generic;",
			"using System.Linq;",
			"using System.Threading.Tasks;",
			"using Microsoft.AspNetCore.Hosting;",
			"using Microsoft.Extensions.Configuration;",
			"using Microsoft.Extensions.Hosting;",
			"using Microsoft.Extensions.Logging;",
			"",
			"namespace ${1:${TM_DIRECTORY/^.*[\\\\\\/]([^\\\\\\\\/]+)$/$1/}}",
			"{",
			"    public class Program",
			"    {",
			"        public static void Main(string[] args)",
			"        {",
			"            CreateHostBuilder(args).Build().Run();",
			"        }",
			"",
			"        public static IHostBuilder CreateHostBuilder(string[] args) =>",
			"            Host.CreateDefaultBuilder(args)",
			"                .ConfigureWebHostDefaults(webBuilder =>",
			"                {",
			"                    webBuilder.UseStartup<Startup>();",
			"                });",
			"    }",
			"}",
			""
		],
		"description": "Create IWebHost"
	},
	"Create IWebHostBuilder": {
		"prefix": "ac-program-main",
		"body": [
			"        public static void Main(string[] args)",
			"        {",
			"            WebHost.CreateDefaultBuilder(args)",
			"                .UseStartup<Startup>();",
			"                .Build()",
			"                .Run();$0",
			"        }",
			""
		],
		"description": "Create IWebHost"
	},
	"Create Full IWebHostBuilder": {
		"prefix": "ac-program-main-full",
		"body": [
			"            var builder = new WebHostBuilder()",
			"                .UseKestrel((builderContext, options) =>",
			"                {",
			"                    options.Configure(builderContext.Configuration.GetSection(\"Kestrel\"));",
			"                })",
			"                .UseContentRoot(Directory.GetCurrentDirectory())",
			"                .ConfigureAppConfiguration((hostingContext, config) =>",
			"                {",
			"                    var env = hostingContext.HostingEnvironment;",
			"",
			"                    config.AddJsonFile(\"appsettings.json\", optional: true, reloadOnChange: true)",
			"                          .AddJsonFile($\"appsettings.{env.EnvironmentName}.json\", optional: true, reloadOnChange: true);",
			"",
			"                    if (env.IsDevelopment())",
			"                    {",
			"                        var appAssembly = Assembly.Load(new AssemblyName(env.ApplicationName));",
			"                        if (appAssembly != null)",
			"                        {",
			"                            config.AddUserSecrets(appAssembly, optional: true);",
			"                        }",
			"                    }",
			"",
			"                    config.AddEnvironmentVariables();",
			"",
			"                    if (args != null)",
			"                    {",
			"                        config.AddCommandLine(args);",
			"                    }",
			"                })",
			"                .ConfigureLogging((hostingContext, logging) =>",
			"                {",
			"                    logging.AddConfiguration(hostingContext.Configuration.GetSection(\"Logging\"));",
			"                    logging.AddConsole();",
			"                    logging.AddDebug();",
			"                })",
			"                .UseIISIntegration()",
			"                .UseDefaultServiceProvider((context, options) =>",
			"                {",
			"                    options.ValidateScopes = context.HostingEnvironment.IsDevelopment();",
			"                });",
			"",
			"            if (args != null)",
			"            {",
			"                builder.UseConfiguration(new ConfigurationBuilder().AddCommandLine(args).Build());",
			"            }",
			"",
			"            builder.UseStartup<Startup>().Build().Run();"
		],
		"description": "Create Full IWebHost"
	}
}